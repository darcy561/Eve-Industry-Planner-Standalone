## Service URLs now provided via .env file

x-restart: &restart_policy
  restart: unless-stopped
# Shared port mappings
x-ports-nginx: &ports_nginx
  - "3000:80"
services:
  api:
    build:
      context: .
      dockerfile: cmd/api/Dockerfile
    depends_on:
      - mongo
      - redis
      - nats
      - minio
      - worker
    env_file:
      - .env
    environment:
      FAIL_ON_STARTUP: false
      LOG_LEVEL: info

  worker:
    <<: *restart_policy
    build:
      context: .
      dockerfile: cmd/worker/Dockerfile
    depends_on:
      - nats
      - mongo
      - minio
      - redis
    env_file:
      - .env
    environment:
      LOG_LEVEL: info

  push:
    <<: *restart_policy
    build:
      context: .
      dockerfile: cmd/push/Dockerfile
    depends_on:
      - nats
      - mongo
      - worker
    env_file:
      - .env
    environment:
      LOG_LEVEL: info

  scheduler:
    <<: *restart_policy
    build:
      context: .
      dockerfile: cmd/scheduler/Dockerfile
    depends_on:
      - nats
      - mongo
      - minio
      - redis
      - worker
    env_file:
      - .env
    environment:
      LOG_LEVEL: info

  # web:
  #   build: ./cmd/web
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - api

  nginx:
    <<: *restart_policy
    build: ./nginx
    container_name: nginx
    ports: *ports_nginx
    volumes:
      - ./frontend/build:/usr/share/nginx/html
    depends_on:
      - api
      - push
    env_file:
      - .env

  nats:
    <<: *restart_policy
    image: nats:2.10.14
    command: ["-js", "-sd", "/data"]
    volumes:
      - nats_data:/data
    env_file:
      - .env

  redis:
    <<: *restart_policy
    image: redis:7.4-alpine
    command: redis-server --appendonly yes --save 60 1000
    volumes:
      - redis_data:/data
    env_file:
      - .env

  mongo:
    <<: *restart_policy
    image: mongo:8.0
    volumes:
      - mongo_data:/data/db
    env_file:
      - .env

  minio:
    <<: *restart_policy
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio_data:/data
    env_file:
      - .env

  loki:
    <<: *restart_policy
    image: grafana/loki:2.9.8
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./configs/loki-config.yaml:/etc/loki/local-config.yaml:ro
    depends_on:
      - nginx
    env_file:
      - .env

  promtail:
    <<: *restart_policy
    image: grafana/promtail:2.9.8
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./configs/promtail-config.yaml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - loki
    env_file:
      - .env

  grafana:
    <<: *restart_policy
    image: grafana/grafana:11.2.0
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - loki
    env_file:
      - .env

  prometheus:
    <<: *restart_policy
    image: prom/prometheus:v2.54.1
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - loki
      - promtail
    env_file:
      - .env

  node-exporter:
    <<: *restart_policy
    image: prom/node-exporter:v1.8.1
    pid: host
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/host
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host:ro
    env_file:
      - .env

volumes:
  mongo_data:
  minio_data:
  grafana_data:
  redis_data:
  nats_data:
